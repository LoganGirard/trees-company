using System.Collections; using System.Collections.Generic; using UnityEngine; using Assets.Playables; using UnityEngine.UI;  public class Clicker : MonoBehaviour {     public GameObject treePrefab;     public GameObject powerPrefab;     public GameObject housePrefab;      public Sprite TreeCardSprite;     public Sprite PowerCardSprite;     public Sprite HouseCardSprite;      public GameObject CurrentCardSelection;      private GameObject CurrentPrefabSelection;      Transform PreviousHighlighted;      Camera Camera;     // Start is called before the first frame update     void Start()     {         Camera = FindObjectOfType<Camera>();          CurrentPrefabSelection = treePrefab;     }      // Update is called once per frame     void Update()     {         Ray ray = Camera.ScreenPointToRay(Input.mousePosition);         RaycastHit hit;          if (PreviousHighlighted != null)         {             MeshRenderer mr = PreviousHighlighted.GetComponent<MeshRenderer>();             mr.material.shader = Shader.Find("Unlit/Texture");         }          if (Physics.Raycast(ray, out hit))         {             if (hit.transform.gameObject.name.Contains("Floor"))             {                 MeshRenderer mr;                  PreviousHighlighted = hit.transform;                 mr = PreviousHighlighted.GetComponent<MeshRenderer>();                 mr.material.shader = Shader.Find("Outlined/Custom");             }              var playable = hit.transform.GetComponent<PlayableBase>();             if (Input.GetMouseButtonDown(0) && BoardManager.TotalTreePoints > playable.TreeCost && BoardManager.TotalEnergyPoints > playable.PowerCost)             {                 PlaceGameObject(CurrentPrefabSelection, hit);                 BoardManager.TotalTreePoints -= playable.TreeCost;
                BoardManager.TotalEnergyPoints -= playable.PowerCost;             }         }          SwitchCurrentPrefabSelection();     }      void PlaceGameObject(GameObject prefab, RaycastHit hit)     {         // Only let the user add stuff on floor tiles         if (hit.transform.gameObject.name.Contains("Floor"))         {             Debug.Log(hit.transform.gameObject.name);             // the object identified by hit.transform was clicked             // do whatever you want              int xIndex = hit.transform.gameObject.GetComponent<PlayableBase>().X;             int yIndex = hit.transform.gameObject.GetComponent<PlayableBase>().Y;              Destroy(BoardManager.gridGameObjects[yIndex, xIndex]);              BoardManager.gridGameObjects[yIndex, xIndex]                 = Instantiate(prefab, hit.transform.position, Quaternion.identity);              // BoardManager.gridGameObjects[yIndex, xIndex].transform.SetParent(BoardManager.boardHolder);         }         else         {             Debug.Log("Can't click non-floor tiles!");         }     }      // Switch current prefab and reflect changes in UI     void SwitchCurrentPrefabSelection()     {         if(Input.GetKey(KeyCode.A))         {             CurrentPrefabSelection = treePrefab;              CurrentCardSelection.GetComponent<Image>().sprite = TreeCardSprite;          }          else if (Input.GetKey(KeyCode.S))         {             CurrentPrefabSelection = housePrefab;              CurrentCardSelection.GetComponent<Image>().sprite = HouseCardSprite;         }          else if (Input.GetKey(KeyCode.D))         {             CurrentPrefabSelection = powerPrefab;              CurrentCardSelection.GetComponent<Image>().sprite = PowerCardSprite;         }     }      }  